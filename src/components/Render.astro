---
import { PortableText } from "astro-portabletext";

import Block from "./Block.astro";
import List from "./List.astro";
import Link from "./Link.astro";

const composants = await Astro.glob("./cmp/*.astro");

const { data, context } = Astro.props;
let value;
if (data) {
  value = data.map((e) => ({ ...e, ...context }));
}
---

<PortableText
  value={value}
  components={{
    mark: {
      link: Link,
    },
    list: {
      bullet: List,
      number: List,
      menu: List,
    },
    block: {
      h1: Block,
      h2: Block,
      h3: Block,
      h4: Block,
      h5: Block,
      h6: Block,
      blockquote: Block,
      normal: Block,
    },
    type: {
      feature: composants.find((cmp) => cmp.default.name === "features")
        .default,
      hero: composants.find((cmp) => cmp.default.name === "hero").default,
    },
    // type: {
    //   hero: composants.find((cmp) => cmp.default.name === "Hero").default,
    //   services: composants.find((cmp) => cmp.default.name === "Services")
    //     .default,
    //   servicesimg: composants.find(
    //     (cmp) => cmp.default.name === "ServicesImages"
    //   ).default,
    //   feature: composants.find((cmp) => cmp.default.name === "Feature").default,
    //   cta: composants.find((cmp) => cmp.default.name === "Cta").default,
    //   etapes: composants.find((cmp) => cmp.default.name === "Etapes").default,
    //   faq: composants.find((cmp) => cmp.default.name === "Faq").default,
    //   team: composants.find((cmp) => cmp.default.name === "Team").default,
    //   contact: composants.find((cmp) => cmp.default.name === "Contact").default,
    //   motionlogo: composants.find((cmp) => cmp.default.name === "MotionLogo")
    //     .default,
    //   section: composants.find((cmp) => cmp.default.name === "Section").default,
    //   marquee: composants.find((cmp) => cmp.default.name === "Marquee").default,
    //   button: composants.find((cmp) => cmp.default.name === "Button").default,
    //   displayimage: composants.find(
    //     (cmp) => cmp.default.name === "DisplayImage"
    //   ).default,
    //   scrollinvitation: composants.find(
    //     (cmp) => cmp.default.name === "ScrollInvitation"
    //   ).default,
    //   tabs: composants.find((cmp) => cmp.default.name === "Tabs").default,
    //   profile: composants.find((cmp) => cmp.default.name === "Profile").default,
    // },
  }}
/>
