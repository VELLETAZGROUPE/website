---
import {PortableText} from "astro-portabletext";
import Button from "../Button.astro";
import NetlifyImage from "../NetlifyImage.astro";

const {node} = Astro.props;
---

<section
  id={node.id || undefined}
  class={`remove-margin  ${node.useCol ? "doubleCol" : ""}`}>
  <div
    class={`${node.img?.src ? "withimg" : ""}  max-w-7xl mx-auto section ${node.bg ? node.bg : ""}`}>
    {
      node.img?.src && (
        <div class="image">
          <NetlifyImage alt={node.img.alt} src={node.img.src} />
        </div>
      )
    }
    <div class="wrap-margin text">
      <PortableText
        value={node.text}
        components={{
          type: {
            button: Button,
          },
        }}
      />
    </div>
  </div>
</section>

<style>
  .text:has(> :not(a):nth-child(1):last-child) {
    font-family: var(--headings);
    font-size: clamp(2.7994rem, 1.9432rem + 4.281vw, 5.2609rem);
    line-height: 1.2;
    letter-spacing: -0.02em;
    font-weight: 800;
    white-space: break-spaces;
  }

  .section.doubleCol :global(h2) {
    @apply break-after-auto lg:break-after-column;
  }
  .section {
    @apply py-4 md:py-8 lg:py-12 xl:py-16 columns-1;
    column-gap: 4rem;
  }

  .section:global(.doubleCol) {
    @apply lg:columns-2;
  }

  .wrap-margin {
    @apply px-4 md:px-8 lg:px-12 xl:px-16;
  }

  .withimg {
    @apply flex flex-col md:flex-row gap-6;
  }

  .withimg > * {
    flex-basis: 50%;
  }

  .withimg :global(img) {
    @apply w-full h-[calc(100%+2rem)] md:h-[calc(100%+4rem)] lg:h-[calc(100%+6rem)] xl:h-[calc(100%+8rem)] object-cover -mt-4 md:-mt-8 lg:-mt-12 xl:-mt-16;
  }

  .section.withimg + .section.withimg {
    @apply md:flex-row-reverse;
  }

  .section.green :global(a.bordeau:hover, a.bordeau:focus) {
    box-shadow: inset 100em 0 0 0 var(--color-accent1-dim);
    color: var(--color-body);
  }

  .section.white {
    @apply bg-[var(--color-bg)] text-[var(--color-body)];
  }
  .section.green {
    @apply bg-[var(--color-accent1)] text-[var(--color-bg)];
  }
  .section.red {
    @apply bg-[var(--color-accent2)] text-[var(--color-bg)];
  }
</style>
