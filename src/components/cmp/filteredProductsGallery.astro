---
import {PortableText} from "astro-portabletext";
import Button from "../Button.astro";
import NetlifyImage from "../NetlifyImage.astro";
import HN from "../HN.astro";
import Link from "../Link.astro";

const {node} = Astro.props;

let allFilters = [];

if (node.hasfilter) {
  for (let i = 0; i < node.products.length; i++) {
    allFilters.push(node.products[i].filters);
    node.products[i].filters = node.products[i].filters
      .map((filter) => filter.replaceAll(" ", "-"))
      .join(" ");
  }
  allFilters = allFilters.flat();
}

let uniqueFilters = [...new Set(allFilters)];

let datafilter = [];
for (let filter of uniqueFilters) {
  datafilter.push({
    name: filter.replaceAll(" ", "-"),
    display: filter,
  });
}
---

<section
  class="py-12 lg:py-20 max-w-7xl mx-auto px-0 md:px-[var(--space-m)] lg:px-[var(--space-l)] xl:px-[var(--space-xl)]">
  {
    node.title && (
      <div class="texte mb-5 lg:mb-8 flex flex-col justify-center items-start">
        <PortableText
          value={node.title}
          components={{
            mark: {
              link: Link,
              internalLink: Link,
            },
            type: {
              button: Button,
            },
          }}
        />
      </div>
    )
  }

  {
    node.hasfilter && (
      <div class="filter-nav filter-nav--v3 filter-nav--expanded js-filter-nav">
        <button
          class="bg-white text-gray-900 shadow-md text-[1em] px-4 py-2 rounded-md relative inline-flex justify-center items-center whitespace-nowrap cursor-pointer no-underline leading-tight transition-all duration-200 hover:shadow focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-gray-700 hidden js-filter-nav__control"
          aria-label="Select a filter option"
          aria-controls="filter-nav">
          <span class="js-filter-nav__placeholder" aria-hidden="true">
            Filtres
          </span>

          <svg
            class="icon inline-block text-inherit fill-current leading-none shrink-0 w-[12px] h-[12px] ml-1.5 lg:ml-2"
            aria-hidden="true"
            viewBox="0 0 12 12">
            <polyline
              points="0.5 3.5 6 9.5 11.5 3.5"
              fill="none"
              stroke-width="1"
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
            />
          </svg>
        </button>

        <div class="filter-nav__wrapper js-filter-nav__wrapper" id="filter-nav">
          <nav class="filter-nav__nav justify-center js-filter-nav__nav">
            <ul
              class="filter-nav__list js-filter-nav__list"
              aria-controls="product-gallery">
              <li class="filter-nav__item">
                <button
                  class="filter-nav__btn js-filter-nav__btn js-tab-focus"
                  aria-current="true"
                  data-filter="*">
                  Tous les produits
                </button>
              </li>

              {datafilter.map((filter) => (
                <li class="filter-nav__item">
                  <button
                    class="filter-nav__btn js-filter-nav__btn js-tab-focus"
                    data-filter={filter.name}>
                    {filter.display}
                  </button>
                </li>
              ))}

              <li
                class="filter-nav__marker js-filter-nav__marker"
                aria-hidden="true"
              />
            </ul>

            <button
              class="filter-nav__close-btn hidden js-filter-nav__close-btn js-tab-focus p-1"
              aria-label="Fermer la navigation">
              <svg
                class="icon inline-block text-inherit fill-current leading-none shrink-0"
                viewBox="0 0 16 16"
                aria-hidden="true">
                <g
                  stroke-width="1"
                  stroke="currentColor"
                  fill="none"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-miterlimit="10">
                  <>
                    <line x1="13.5" y1="2.5" x2="2.5" y2="13.5" />
                    <line x1="2.5" y1="2.5" x2="13.5" y2="13.5" />
                  </>
                </g>
              </svg>
            </button>
          </nav>
        </div>
      </div>
    )
  }

  <div class="mt-5 lg:mt-8">
    <ul class="grid grid-cols-12 gap-3 lg:gap-5 js-filter" id="product-gallery">
      {
        node.products &&
          node.products.map((product) => (
            <li
              class={`col-span-12 md:col-span-6 lg:col-span-${node.col || "4"} js-filter__item`}
              data-filter={product.filters}>
              <div class="prod-card flex flex-col justify-center">
                <a class="prod-card__img-link" href={product.link}>
                  {product.img && (
                    <figure class="prod-card__img aspect-w-1 aspect-h-1 relative">
                      <NetlifyImage
                        src={product.img.src}
                        alt={product.img.alt}
                        class={`${product.img.duotone || ""} ${node.height || "small"}`}
                      />
                    </figure>
                  )}
                </a>

                {product.producttitle && (
                  <div class="producttext py-3 lg:py-5">
                    <HN Level={product.level}>{product.producttitle}</HN>
                    {product.itemtext && (
                      <PortableText
                        value={product.itemtext}
                        components={{
                          type: {
                            button: Button,
                          },
                        }}
                      />
                    )}
                  </div>
                )}
              </div>
            </li>
          ))
      }
    </ul>
  </div>
</section>

<style>
  .texte :global(*) {
    margin-left: 0;
  }

  .texte :global(a) {
    text-decoration: underline;
    cursor: pointer;
    white-space: break-spaces;
  }

  .producttext :global(h1, h2, h3, h4, h5, h6) {
    margin-block: var(--space-m);
    text-align: left;
  }

  .producttext :global(*):only-child {
    text-align: center;
  }

  /* --expanded version */
  .filter-nav--expanded {
    /* --v1 */
    /* --v2 */
    /* --v3 */
  }
  .filter-nav--expanded .filter-nav__nav {
    display: flex;
    overflow: auto;
  }
  .filter-nav--expanded .filter-nav__list {
    display: inline-flex;
    position: relative;
  }
  .filter-nav--expanded .filter-nav__item {
    flex-shrink: 0;
    position: relative;
    z-index: 1;
  }
  .filter-nav--expanded .filter-nav__btn {
    /* <button> element inside each list item */
    cursor: pointer;
  }
  .filter-nav--expanded .filter-nav__marker {
    /* animated marker */
    position: absolute;
    width: 0;
    pointer-events: none;
    transition:
      width 0.3s,
      -webkit-transform 0.3s;
    transition:
      transform 0.3s,
      width 0.3s;
    transition:
      transform 0.3s,
      width 0.3s,
      -webkit-transform 0.3s;
    transition-timing-function: cubic-bezier(0.645, 0.045, 0.355, 1);
    will-change: width, transform;
  }

  .filter-nav--expanded.filter-nav--v3 .filter-nav__btn {
    @apply py-1 lg:py-1.5 px-3 lg:px-5;
    @apply text-[#5D2F3F]/50;
    transition: color 0.2s;
  }
  .filter-nav--expanded.filter-nav--v3 .filter-nav__btn:hover {
    @apply text-[#5D2F3F];
  }
  .filter-nav--expanded.filter-nav--v3 .filter-nav__btn[aria-current="true"] {
    @apply text-[#00705f];
  }
  .filter-nav--expanded.filter-nav--v3 .filter-nav__marker {
    /* animated marker */
    bottom: 0;
    left: 0;
    height: 1px;
    @apply bg-[#00705f];
  }

  /* --collapsed version - available horizontal space not enough to contain all list items */
  .filter-nav--collapsed .filter-nav__wrapper {
    position: fixed;
    @apply z-[15];
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    @apply bg-gray-900/90;
    visibility: hidden;
    opacity: 0;
  }
  .filter-nav--collapsed .filter-nav__wrapper--is-visible {
    visibility: visible;
    opacity: 1;
    transition: opacity 0.3s;
  }
  .filter-nav--collapsed .filter-nav__wrapper--is-visible .filter-nav__nav {
    transform: translateY(0);

    transition: transform 0.3s;
  }
  .filter-nav--collapsed .filter-nav__nav {
    display: flex;
    justify-content: flex-start;
    flex-direction: column;
    @apply bg-white;
    @apply shadow-md;
    max-height: 100%;
    -webkit-transform: translateY(-1em);
    transform: translateY(-1em);
  }
  .filter-nav--collapsed .filter-nav__list {
    order: 2;
    flex-direction: column;
    overflow: auto;
    @apply pt-0 px-0 pb-5 lg:pb-8;
  }
  .filter-nav--collapsed .filter-nav__list::before {
    /* top shadow - visible if menu height triggers vertical scrolling */
    content: "";
    display: block;
    width: 100%;
    height: 10px;
    background: linear-gradient(hsl(0 0% 100% / 1), hsl(0 0% 100% / 0));
    position: -webkit-sticky;
    position: sticky;
    top: 0;
    left: 0;
    z-index: 1;
  }
  .filter-nav--collapsed .filter-nav__btn {
    display: block;
    /* fallback */
    display: flex;
    align-items: center;
    width: 100%;
    text-align: left;
    @apply text-lg lg:text-2xl;
    @apply py-2 lg:py-3 px-7 lg:px-9;
    @apply text-gray-900/50;
    cursor: pointer;
  }
  .filter-nav--collapsed .filter-nav__btn:hover {
    @apply text-gray-900;
  }
  .filter-nav--collapsed .filter-nav__btn[aria-current="true"] {
    @apply text-[#00705f];
  }
  .filter-nav--collapsed .filter-nav__btn::before {
    /* check icon next to the selected button */
    content: "";
    display: block;
    height: 16px;
    width: 16px;
    left: 8px;
    top: 20px;
    @apply mr-1 lg:mr-1.5 top-4 lg:top-5;
    background-color: transparent;
  }
  .filter-nav--collapsed .filter-nav__btn[aria-current="true"]::before {
    @apply bg-[#00705f];
    /* icon color */
    -webkit-mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpolyline stroke-width='2' stroke='%23000000' fill='none' stroke-linecap='round' stroke-linejoin='round' points='1,9 5,13 15,3 '/%3E%3C/svg%3E");
    mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpolyline stroke-width='2' stroke='%23000000' fill='none' stroke-linecap='round' stroke-linejoin='round' points='1,9 5,13 15,3 '/%3E%3C/svg%3E");
  }
  .filter-nav--collapsed .filter-nav__marker {
    /* hide animated marker */
    display: none !important;
  }
  .filter-nav--collapsed .filter-nav__close-btn {
    /* X button */
    --size: 32px;
    width: var(--size);
    height: var(--size);
    display: flex;
    order: 1;
    flex-shrink: 0;
    position: relative;
    z-index: 2;
    @apply mt-2 lg:mt-3 mr-2 lg:mr-3 mb-0 ml-auto;

    justify-content: center;
    align-items: center;
    border-radius: 50%;
    @apply bg-white;
    @apply shadow-md;
    transition: 0.2s;
  }
  .filter-nav--collapsed .filter-nav__close-btn:hover {
    @apply bg-white;
    @apply shadow-lg;
  }
  .filter-nav--collapsed .filter-nav__close-btn .icon {
    display: block;
    @apply text-gray-700;
  }

  .prod-card {
    position: relative;
  }

  .prod-card__img-link {
    text-decoration: none;
    display: block;
  }
  .prod-card__img-link:hover .prod-card__img {
    opacity: 0.85;
  }

  .prod-card__img {
    transition: opacity 0.2s;
  }
  .prod-card__img :global(img) {
    display: block;
    width: 100%;
    object-fit: cover;
  }

  .prod-card__img :global(img.small) {
    height: 250px;
    width: 250px;
    margin-inline: auto;
    object-fit: cover;
  }

  .prod-card__img :global(img.medium) {
    height: 350px;
  }

  .prod-card__img :global(img.large) {
    height: 500px;
  }

  .prod-card__badge {
    position: absolute;
    z-index: 1;
    @apply top-2 lg:top-3;
    @apply right-2 lg:right-3;
    @apply bg-white/95;
    @apply py-1.5 lg:py-2 px-3 lg:px-5;
    @apply text-xs;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    @apply text-gray-700;
    font-weight: 500;
  }

  .prod-card__price--old {
    @apply text-rose-600;
    text-decoration: line-through;
  }
  .prod-card__price--old::before {
    content: "original price";
    position: absolute;
    clip: rect(1px, 1px, 1px, 1px);
    clip-path: inset(50%);
  }

  .prod-card__price--new {
    text-decoration: none;
  }
  .prod-card__price--new::before {
    content: "discounted price";
    position: absolute;
    clip: rect(1px, 1px, 1px, 1px);
    clip-path: inset(50%);
  }
</style>
